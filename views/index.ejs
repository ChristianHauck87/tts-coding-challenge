<!DOCTYPE html>
<html>
<head>
	<title>How to solve TTS Challenge</title>
	<meta charset="utf-8">
	<script src="https://d3js.org/d3.v5.min.js"></script>
	<script src ="https://d3js.org/d3-axis.v1.min.js"></script>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
	<link rel="stylesheet" type="text/css" href = "/static/style.css">
	<script src = "/static/barchart.js"/></script>
	<script src = "/static/click.js"/></script>

</head>
<body>
<h1>A Bar Chart with Age Cohorts</h1>
	
	<chart></chart>
	
	<table class="minimalistBlack">
  		<tr>
    		<th>Student ID</th>
		 	<th>Firstname</th>
		 	<th>Lastname</th> 
    		<th>Age</th>
  		</tr>
		<% for (var i = 0; i < students[0].length; i++) { %>
   			<tr class="agezero">
      			<td><%= students[0][i].studentid %></td>
      			<td><%= students[0][i].first_name %></td>
      			<td><%= students[0][i].last_name %></td>
      			<td><%= students[0][i].age %></td>
      		</tr>
   		<% } %>
   		<% for (var i = 0; i < students[1].length; i++) { %>
   			<tr class="ageone">
      			<td><%= students[1][i].studentid %></td>
      			<td><%= students[1][i].first_name %></td>
      			<td><%= students[1][i].last_name %></td>
      			<td><%= students[1][i].age %></td>
      		</tr>
   		<% } %>
   		<% for (var i = 0; i < students[2].length; i++) { %>
   			<tr class="agetwo">
      			<td><%= students[2][i].studentid %></td>
      			<td><%= students[2][i].first_name %></td>
      			<td><%= students[2][i].last_name %></td>
      			<td><%= students[2][i].age %></td>
      		</tr>
   		<% } %>
   		<% for (var i = 0; i < students[3].length; i++) { %>
   			<tr class="agethree">
      			<td><%= students[3][i].studentid %></td>
      			<td><%= students[3][i].first_name %></td>
      			<td><%= students[3][i].last_name %></td>
      			<td><%= students[3][i].age %></td>
      		</tr>
   		<% } %>
   		<% for (var i = 0; i < students[4].length; i++) { %>
   			<tr class="agefour">
      			<td><%= students[4][i].studentid %></td>
      			<td><%= students[4][i].first_name %></td>
      			<td><%= students[4][i].last_name %></td>
      			<td><%= students[4][i].age %></td>
      		</tr>
   		<% } %>
   		<% for (var i = 0; i < students[5].length; i++) { %>
   			<tr class="agefive">
      			<td><%= students[5][i].studentid %></td>
      			<td><%= students[5][i].first_name %></td>
      			<td><%= students[5][i].last_name %></td>
      			<td><%= students[5][i].age %></td>
      		</tr>
   		<% } %>
   	</table>
   	<script>
	//defining variables for the bar chart
		var data = 	[<%=students[0].length%>,
					 <%=students[1].length%>, 
					 <%=students[2].length%>, 
					 <%=students[3].length%>, 
					 <%=students[4].length%>, 
					 <%=students[5].length%>
					 ];
		var ageCohorts = ["<=30", "31-35", "36-40", "41-45", "46-50", ">50"];
		var columns = ["Student ID", "First Name", "Last Name", "Age"];
		var remove = ["remove filter"];
		var margin = {top: 20, bottom: 30, left: 20, right: 20};
		var width = 600 - margin.left - margin.right; 
		var height = 400 - margin.top - margin.bottom;
		var barWidth = width / data.length;
		var barPadding = 5;

	
		// scales
		var yScale = d3.scaleLinear()
		    .domain([0, d3.max(data)])
		    .range([0, height - margin.top]);

	    var yAxisScale = d3.scaleLinear()
	    	.domain([0, d3.max(data)])
	    	.range([height - margin.top, 0]);

		// creating drawing area
		var svg = d3.select("chart").append("svg")
				.attr("width", width + margin.left + margin.right)
				.attr("height", height + margin.top + margin.bottom)
				.attr("class", "chartstyle");

		// creating the bar chart
		var barChart = svg.selectAll("rect")
		    .data(data)
		    .enter()
		    .append("rect")
    		.attr("y", function(d) {return height - yScale(d);})
    		.attr("height", function(d) {return yScale(d);})
    		.attr("width", barWidth - barPadding)
    		.attr("transform", function (d, i) {
    			var translate = [barWidth * i + margin.left + margin.right, 0]; 
        		return "translate("+ translate +")";
    		})
    		.attr("class", function(d, i){return "button"+i})
    		.attr("fill", "#8CC8FA");

		// adding clickable remove filter text
		var remove = svg.selectAll("text.remove")
		    .data(remove)
		    .enter()
		    .append("text")
		    .attr("class", "remove")
		    .attr("text-decoration", "underline")
		    .text(function(d) {return d;})
		    .attr("y", function() {return height + margin.top;})
		    .attr("x", width - 3*margin.right)
		    .attr("fill", "#000000")
		    .style("opacity", "0");

	    // 
	    var table1 = d3.selectAll("agezero")
		remove.on("click", function(d){
			d3.selectAll("rect")
    		.transition()
    		.duration(500)
    		.style("fill", "#8CC8FA")
    		remove.style("opacity","0")
    	});

    	barChart.on("click", function(d){
    		d3.selectAll("rect")
    		.transition()
    		.duration(500)
    		.style("fill", "#8CC8FA")
    		
    		d3.select(this)
    		.transition()
    		.duration(500)
    		.style("fill", "#99ff99")
    		remove.style("opacity","100")
    	});
			

		// creating labels
		// labels top
    	var labelstop = svg.selectAll("text.value")
		    .data(data)
		    .enter()
		    .append("text")
		    .attr("class", "value")
		    .text(function(d) {
		        return d;
		    })
		    .attr("y", function(d, i) {
		        return height - yScale(d) - 2;
		    })
		    .attr("x", function(d, i) {
		        return (barWidth * i + margin.left + margin.right) + barWidth / 2 - barPadding;
		    })
		    .attr("text-anchor", "middle")
		    .attr("fill", "#000000");
		    
	    // labels bar bottom
    	var labelsbot = svg.selectAll("text.label")
		    .data(ageCohorts)
		    .enter()
		    .append("text")
		    .attr("class", "label")
		    .text(function(d) {
		        return d;
		    })
		    .attr("y", function() {
		        return height - barPadding;
		    })
		    .attr("x", function(d, i) {
		        return (barWidth * i + margin.left + margin.right) + barWidth / 2 - barPadding;
		    })
		    .attr("text-anchor", "middle")
		    .attr("fill", "#000000");

		    // creating the axes
			var yAxis = d3.axisLeft().scale(yAxisScale);
     
			svg.append("g")
			.attr("transform", "translate(35, 20)")
			.call(yAxis);
	</script>
	
</body>
</html>