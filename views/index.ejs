<!DOCTYPE html>
<html>
<head>
	<title>How to solve TTS Challenge</title>
	<meta charset="utf-8">
	<script src="https://d3js.org/d3.v5.min.js"></script>
	<script src ="https://d3js.org/d3-axis.v1.min.js"></script>
	<style type="text/css">
	 	
		svg{
			display: block ;
			margin: auto;
    		
		}
	 	table.minimalistBlack {
				border: 3px solid #000000;
				background-color: #E5E5E5;
				width: 600px;
				text-align: left;
				border-collapse: collapse;
				margin: auto;
		}
		table.minimalistBlack td, table.minimalistBlack th {
				border: 1px solid #000000;
				padding: 5px 4px;
		}
		table.minimalistBlack tbody td {
				font-size: 13px;
				color: #000000;
		}
		table.minimalistBlack tr:nth-child(even) {
		  		background: #FFFFFF;
		}
		table.minimalistBlack thead {
				background: #B7B7B7;
				background: -moz-linear-gradient(top, #c9c9c9 0%, #bebebe 66%, #B7B7B7 100%);
				background: -webkit-linear-gradient(top, #c9c9c9 0%, #bebebe 66%, #B7B7B7 100%);
				background: linear-gradient(to bottom, #c9c9c9 0%, #bebebe 66%, #B7B7B7 100%);
		}
		table.minimalistBlack thead th {
				font-size: 15px;
				font-weight: bold;
				color: #000000;
				text-align: left;
		}
		table.minimalistBlack tfoot td {
	  			font-size: 14px;
		}

	</style>
</head>
<body>
<h1>The solution</h1>
	<chart></chart>
	
	<table class="minimalistBlack">
  		<tr>
    		<th>Student ID</th>
		 	<th>Firstname</th>
		 	<th>Lastname</th> 
    		<th>Age</th>
  		</tr>
		<% for (var i = 0; i < students[0].length; i++) { %>
   			<tr id="0">
      			<td><%= students[0][i].studentid %></td>
      			<td><%= students[0][i].first_name %></td>
      			<td><%= students[0][i].last_name %></td>
      			<td><%= students[0][i].age %></td>
      		</tr>
   		<% } %>
   		<% for (var i = 0; i < students[1].length; i++) { %>
   			<tr id="1">
      			<td><%= students[1][i].studentid %></td>
      			<td><%= students[1][i].first_name %></td>
      			<td><%= students[1][i].last_name %></td>
      			<td><%= students[1][i].age %></td>
      		</tr>
   		<% } %>
   		<% for (var i = 0; i < students[2].length; i++) { %>
   			<tr id="2">
      			<td><%= students[2][i].studentid %></td>
      			<td><%= students[2][i].first_name %></td>
      			<td><%= students[2][i].last_name %></td>
      			<td><%= students[2][i].age %></td>
      		</tr>
   		<% } %>
   		<% for (var i = 0; i < students[3].length; i++) { %>
   			<tr id="3">
      			<td><%= students[3][i].studentid %></td>
      			<td><%= students[3][i].first_name %></td>
      			<td><%= students[3][i].last_name %></td>
      			<td><%= students[3][i].age %></td>
      		</tr>
   		<% } %>
   		<% for (var i = 0; i < students[4].length; i++) { %>
   			<tr id="4">
      			<td><%= students[4][i].studentid %></td>
      			<td><%= students[4][i].first_name %></td>
      			<td><%= students[4][i].last_name %></td>
      			<td><%= students[4][i].age %></td>
      		</tr>
   		<% } %>
   		<% for (var i = 0; i < students[5].length; i++) { %>
   			<tr id="5">
      			<td><%= students[5][i].studentid %></td>
      			<td><%= students[5][i].first_name %></td>
      			<td><%= students[5][i].last_name %></td>
      			<td><%= students[5][i].age %></td>
      		</tr>
   		<% } %>
   	</table>
	

	<script>
	//defining variables for the bar chart
		var data = 	[<%=students[0].length%>,
					 <%=students[1].length%>, 
					 <%=students[2].length%>, 
					 <%=students[3].length%>, 
					 <%=students[4].length%>, 
					 <%=students[5].length%>
					 ];
		var ageCohorts = ["<=30", "31-35", "36-40", "41-45", "46-50", ">50"];
		var columns = ["Student ID", "First Name", "Last Name", "Age"];
		var margin = {top: 20, bottom: 30, left: 20, right: 20};
		var width = 600 - margin.left - margin.right; 
		var height = 400 - margin.top - margin.bottom;
		var barWidth = width / data.length;
		var barPadding = 5;

		// scales
		var yScale = d3.scaleLinear()
		    .domain([0, d3.max(data)])
		    .range([0, height - margin.top]);

	    /*var xAxisScale = d3.scaleLinear()
	    	.domain([0, width])
	    	.range([0, width]);*/

	    var yAxisScale = d3.scaleLinear()
	    	.domain([0, d3.max(data)])
	    	.range([height - margin.top, 0]);

		// creating drawing area
		var svg = d3.select("chart").append("svg")
				.attr("width", width + margin.left + margin.right)
				.attr("height", height + margin.top + margin.bottom)
				.attr("class", "chartstyle");

		// creating the bar chart
		var barChart = svg.selectAll("rect")
		    .data(data)
		    .enter()
		    .append("rect")
    		.attr("y", function(d) {return height - yScale(d);})
    		.attr("height", function(d) {return yScale(d);})
    		.attr("width", barWidth - barPadding)
    		.attr("transform", function (d, i) {
    			var translate = [barWidth * i + margin.left + margin.right, 0]; 
        		return "translate("+ translate +")";
    		})
    		.attr("fill", "#8CC8FA");

		// creating labels
		// labels top
    	var labelstop = svg.selectAll("text.value")
		    .data(data)
		    .enter()
		    .append("text")
		    .attr("class", "value")
		    .text(function(d) {
		        return d;
		    })
		    .attr("y", function(d, i) {
		        return height - yScale(d) - 2;
		    })
		    .attr("x", function(d, i) {
		        return (barWidth * i + margin.left + margin.right) + barWidth / 2 - barPadding;
		    })
		    .attr("text-anchor", "middle")
		    .attr("fill", "#000000");
		    
	    // labels bar bottom
    	var labelsbot = svg.selectAll("text.label")
		    .data(ageCohorts)
		    .enter()
		    .append("text")
		    .attr("class", "label")
		    .text(function(d) {
		        return d;
		    })
		    .attr("y", function() {
		        return height - barPadding;
		    })
		    .attr("x", function(d, i) {
		        return (barWidth * i + margin.left + margin.right) + barWidth / 2 - barPadding;
		    })
		    .attr("text-anchor", "middle")
		    .attr("fill", "#000000");

		    // creating the axes
			var yAxis = d3.axisLeft().scale(yAxisScale);
     
			svg.append("g")
			.attr("transform", "translate(35, 20)")
			.call(yAxis);
			

		/*var xAxis = d3.axisBottom().scale(xAxisScale);
     
			svg.append("g")
			.attr("transform", "translate(40, 355)")
			.selectAll("text").remove()
			.call(xAxis);*/

		/*function tabulate(students, columns) {
		var table = d3.select('body').append('table')
		var thead = table.append('thead')
		var	tbody = table.append('tbody');

		// append the header row
		thead.append('tr')
		  .selectAll('th')
		  .data(columns).enter()
		  .append('th')
		    .text(function (column) { return column; });

		// create a row for each object in the data
		var rows = tbody.selectAll('tr')
		  .data(data)
		  .enter()
		  .append('tr');

		// create a cell in each row for each column
		var cells = rows.selectAll('td')
		  .data(function (row) {
		    return columns.map(function (column) {
		      return {column: column, value: row[column]};
		    });
		  })
		  .enter()
		  .append('td')
		    .text(function (d) { return d.value; });

	  return table;
	}

	tabulate(data, ["studentid", "first_name", "last_name", "age"]);

	//<%=students[0][0].studentid%>

		/*
		// render table
		// table head
		var table = d3.select("body").append("table");
		var thead = table.append("thead");
		var tbody = table.append("tbody");

		thead.append("tr")
		.selectAll("th")
		.data(columns)
		.enter()
		.append("th")
		.text(function(d, i){return d});

		//table body
		var rows = tbody.selectAll("tr")
		.data(data[0])
		.enter()
		.append("tr");

		var cells = rows.selectAll("td")
		.data(function(row){
			return columns.map(function(columns){
				return{
					columns:columns,
					value:row[columns]
				}
			})
		})
		.enter()
		.append("td")
		.text(function(d, i){
			return d.value;
		})*/





		</script>
</body>
</html>